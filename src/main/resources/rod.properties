# settings for ROD urls
rod.url.domain=http://rod.eionet.europa.eu
rod.url.namespace=http://rod.eionet.europa.eu/activities

rod.url.events=http://rod.eionet.europa.eu/events.rss
rod.url.obligations=http://rod.eionet.europa.eu/obligations.rss
rod.url.activities=http://rod.eionet.europa.eu/activities.rss

# settings for DB connection 
db.drv=${db.drv}
db.url=${db.host}${db.host.ending}
db.usr=${db.usr}
db.pwd=${db.pwd}

# settings for UnitTests DB connection
db.unitest.drv=${db.unitest.drv}
db.unitest.url=${db.unitest.host}${db.host.ending}
db.unitest.usr=${db.unitest.usr}
db.unitest.pwd=${db.unitest.pwd}

#SPARQL endpoint
cr.sparql.endpoint=http://cr3.eionet.europa.eu/sparql

# RA_ID namespace pref
# !!!!!!!!!!!! CHECK, IF CORRECT 
ra.namespace=http://rod.eionet.europa.eu/schema.rdf#obligation
country.namespace=http://rod.eionet.europa.eu/schema.rdf#locality

contreg.url.prefix=http://cr.eionet.europa.eu/view_detail.jsp?description_id=
contreg.coverage.predicate=http://rod.eionet.europa.eu/schema.rdf#period

rod.url.ro_namespace=http://rod.eionet.europa.eu/obligations

# remote services
# internal IP's can be used, if working faster
# XML/RPC=0, SOAP=1, if not specified, 0 is used as default
remote.services.type=0
contreg.service.url=http://cr.eionet.europa.eu/xmlrpc
# !!!!!!!!! SELECT CORRECT OR CHANGE IT
directory.service.url=http://rod.eionet.europa.eu/rpcrouter
# directory.service.url=http://213.168.23.13:81/uit/rpcrouter


# settings for Extractor
# logpath + logfilename need to form a valid path; 
#  leave path empty for current directory
# if debugmode=true, new log with verbose info is built for each extraction,
#  otherwise, less verbose text is appended to previous log.
extractor.logpath=${app.home}/tmp/
extractor.logfilename=extractorlog.txt
extractor.debugmode=true

deadlines.daemon.datefile=${app.home}/tmp/deadlines-daemon-datefile.txt

dpsir.values.file=${app.home}/log/DPSIR.xls

#Namespace prefix for SPATIALs
spatial.namespace=http://rod.eionet.europa.eu/spatial/

#Namespace prefix for issues
issue.namespace=http://rod.eionet.europa.eu/issues/

#Namespace prefix for organisations
organisation.namespace=http://rod.eionet.europa.eu/organisations/

#schema NS for ROD schema.rdf
schema.namespace=http://rod.eionet.europa.eu/schema.rdf

#schema for Legal Instruments
instruments.namespace=http://rod.eionet.europa.eu/instruments/

#for LI RSS
rod.url.instruments=http://rod.eionet.europa.eu/instruments.rss

#Use of DataDictionary over XML-RPC
dd.service.url=http://dd.eionet.europa.eu/rpcrouter

#Parameters for CR harvesting
pred.rdf-type=http://www.w3.org/1999/02/22-rdf-syntax-ns#type
delivery.namespace=http://rod.eionet.europa.eu/schema.rdf#Delivery
delivery.namespaces=http://rod.eionet.europa.eu/schema.rdf#Delivery|http://rod.eionet.europa.eu/schema.rdf#Referral
namespace.separator=|

#Percent of reporting frequence for approaching deadlines
percent.of.freq=10

#XML-RPC server URL for UNS subscription
uns.xml.rpc.server.url=http://uns.eionet.europa.eu/rpcrouter

#Channel name for UNS subscription method
uns.channel.name=111138205489
#71133780673

#Event type predicate for UNS subscription method
uns.eventtype.predicate=http://rod.eionet.europa.eu/schema.rdf#event_type

#Country predicate for UNS subscription method
uns.country.predicate=http://rod.eionet.europa.eu/schema.rdf#locality

#Issue predicate for UNS subscription method
uns.issue.predicate=http://rod.eionet.europa.eu/schema.rdf#issue

#Obligation predicate for UNS subscription method
uns.obligation.predicate=http://rod.eionet.europa.eu/schema.rdf#obligation

#instrument predicate for UNS subscription method
uns.instrument.predicate=http://rod.eionet.europa.eu/schema.rdf#instrument

#Organisation predicate for UNS subscription method
uns.organisation.predicate=http://rod.eionet.europa.eu/schema.rdf#client

#UNS my subscriptions URL
uns.my.subscriptions.url=http://uns.eionet.europa.eu/subsc/edit?sid=

#username for UNS subscriptions
uns.username=rodrpc

#password for UNS subscriptions 
uns.pwd=johnnyrotten

#UNS xmlrpc function that is called for making subscription
uns.make.subsription.function=UNSService.makeSubscription

#UNS xmlrpc function that is called for sending notifications
uns.send.notification.function=UNSService.sendNotification

#Undo - number of records per page 
undo.step=25

#HistoryUndo - number of records per page 
history.undo.step=50
